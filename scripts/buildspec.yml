version: 0.2
phases:
  install:
    commands:
      - echo "Installing Docker..."
      - docker --version  # Check if Docker is installed
      - echo "Installing AWS CLI..."
      - aws --version  # Check if AWS CLI is installed
      - echo "Installing Helm..."
      - curl https://get.helm.sh/helm-v3.9.0-linux-amd64.tar.gz -o helm.tar.gz  # Get the Helm binary
      - tar -zxvf helm.tar.gz  # Unpack the Helm binary
      - mv linux-amd64/helm /usr/local/bin/helm  # Move the Helm binary to a directory in PATH
      - helm version  # Verify Helm installation
  pre_build:
    commands:
      - echo "Logging into Amazon ECR..."
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $REPOSITORY_URI

  build:
    commands:
      - echo "Building Docker image..."
      - docker build -t $REPOSITORY_URI:$IMAGE_TAG .

  post_build:
    commands:
      - echo "Pushing Docker image to ECR..."
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo "Cleaning up Docker..."
      - echo "Updating kubeconfig for EKS..."
      - aws eks --region $AWS_DEFAULT_REGION update-kubeconfig --name $CLUSTER_NAME 
      - kubectl get nodes
      - echo "Deploying to EKS with Helm..."
      - echo "Deploying to EKS with Helm..."
      - docker cp $(docker create $REPOSITORY_URI:$IMAGE_TAG):/usr/src/app/helm-charts ./helm-charts
      - docker cp $(docker create $REPOSITORY_URI:$IMAGE_TAG):/usr/src/app/helm-charts ./helm-postgress
      - helm upgrade -i api ./helm-charts --set image.repository=$REPOSITORY_URI --set image.tag=$IMAGE_TAG
      - helm upgrade -i db ./helm-postgress
      # - docker image prune -a -f
      - rm -rf ./helm-*
      - echo " Deployment Finished "
